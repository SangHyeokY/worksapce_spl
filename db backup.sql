

CREATE TABLE STUDYROOM_MEMBER (
	MEMBER_CODE INT AUTO_INCREMENT PRIMARY KEY
	, MEMBER_ID VARCHAR(15) UNIQUE NOT NULL
	, MEMBER_PW VARCHAR(50) NOT NULL
	, MEMBER_NAME VARCHAR(10) NOT NULL
	, MEMBER_TEL VARCHAR(13) NOT NULL
    , MEMBER_EMAIL VARCHAR(50) NOT NULL
	, MEMBER_BIRTH DATETIME
	, POST_CODE VARCHAR(10)
	, MEMBER_ADDR VARCHAR(50) NOT NULL
	, ADDR_DETAIL VARCHAR(50)
	, MEMBER_GENDER VARCHAR(2)
	, IS_ADMIN VARCHAR(10) DEFAULT 'USER'   -- 'USER', 'ADMIN', 'ARBEIT'
);

CREATE TABLE APPROVAL (
	APPROVAL_CODE INT AUTO_INCREMENT PRIMARY KEY
	, APPROVAL_FEE INT NOT NULL
	, APPROVAL_DATE DATETIME DEFAULT CURRENT_TIMESTAMP
	, MEMBER_CODE INT REFERENCES STUDYROOM_MEMBER (MEMBER_CODE)
	, CHARGE_CODE INT REFERENCES STUDYROOM_CHARGE (CHARGE_CODE)
	, COUPON_USE VARCHAR(5) DEFAULT 'N'   -- 'Y', 'N'
);

CREATE TABLE STUDYROOM_INOUT (
	DAY_INPUT INT AUTO_INCREMENT PRIMARY KEY
	, MEMBER_CODE INT REFERENCES STUDYROOM_MEMBER (MEMBER_CODE)
	, IN_OUT VARCHAR(5)
	, INOUT_TIME DATETIME DEFAULT CURRENT_TIMESTAMP
);






CREATE TABLE SEAT_STATUS (
	STATUS_NUM INT AUTO_INCREMENT PRIMARY KEY
	, STATUS_NAME VARCHAR(20) NOT NULL UNIQUE
);

CREATE TABLE STUDYROOM_SEAT (
	SEAT_NUM INT AUTO_INCREMENT PRIMARY KEY
	, SEAT_POWER VARCHAR(10) DEFAULT 'OFF' -- (ON,OFF)
	, SEAT_FLOOR INT DEFAULT 1 NOT NULL -- (1 , 2)
	, MEMBER_CODE INT REFERENCES STUDYROOM_MEMBER (MEMBER_CODE)
	, STATUS_NUM INT DEFAULT 2 REFERENCES SEAT_STATUS (STATUS_NUM)
	, AGE_CODE INT DEFAULT 1 REFERENCES FLOOR_AGE (AGE_CODE)
);

CREATE TABLE FLOOR_AGE (
	AGE_CODE INT AUTO_INCREMENT PRIMARY KEY
	, AGE_NAME VARCHAR(15) NOT NULL
);

CREATE TABLE COUPON (
	COUPON_CODE INT AUTO_INCREMENT PRIMARY KEY 
	, COUPON_NAME VARCHAR(50) NOT NULL
	, DISCOUNT_PERCENT INT NOT NULL 
);

CREATE TABLE MEMBER_COUPON (
	OWN_COUPON_CODE INT AUTO_INCREMENT PRIMARY KEY 
	, COUPON_CODE INT REFERENCES COUPON (COUPON_CODE) 
	, MEMBER_CODE INT REFERENCES STUDYROOM_MEMBER (MEMBER_CODE)
);

CREATE TABLE SALES_INFO (
	SALES_CODE INT AUTO_INCREMENT PRIMARY KEY
	, SALES_FEE INT NOT NULL
	, SALES_DATE DATETIME DEFAULT CURRENT_TIMESTAMP
	, CHARGE_CODE INT REFERENCES STUDYROOM_CHARGE (CHARGE_CODE)
);






CREATE TABLE STUDYROOM_CHARGE (
	CHARGE_CODE INT AUTO_INCREMENT PRIMARY KEY
	, CHARGE_NAME VARCHAR(50) NOT NULL
	, CHARGE_FEE INT NOT NULL	
	, CHARGE_DATE INT NOT NULL
);

CREATE TABLE STUDYROOM_MESSAGE (
	MESSAGE_CODE INT AUTO_INCREMENT PRIMARY KEY
	, MESSAGE_CONTENT VARCHAR(300) NOT NULL
	, MESSAGE_DATE DATETIME DEFAULT CURRENT_TIMESTAMP
	, TO_FROM VARCHAR(10) DEFAULT 'TO'
	, MEMBER_CODE INT REFERENCES STUDYROOM_MEMBER (MEMBER_CODE)
);




CREATE TABLE STUDYROOM_BOARD (
	BOARD_CODE INT AUTO_INCREMENT PRIMARY KEY
	, BOARD_TITLE VARCHAR(20) NOT NULL
	, BOARD_WRITER VARCHAR (20) NOT NULL REFERENCES STUDYROOM_MEMBER (MEMBER_ID)
	, BOARD_DATE DATETIME DEFAULT CURRENT_TIMESTAMP
	, BOARD_CONTENT VARCHAR(200) NOT NULL
	, BOARD_SECRET VARCHAR(10) DEFAULT 'NO' -- YES : 비밀글 , NO : 공개글 
);

CREATE TABLE STUDYROOM_COMMENT (
	COMMENT_CODE INT AUTO_INCREMENT PRIMARY KEY
	,	COMMENT_WRITER VARCHAR(20) NOT NULL 
	, 	COMMENT_CONTENT VARCHAR(200) NOT NULL
	,	COMMENT_DATE DATETIME DEFAULT CURRENT_TIMESTAMP 
	, 	BOARD_CODE INT NOT NULL REFERENCES STUDYROOM_BOARD (BOARD_CODE)
);

CREATE TABLE BOARD_IMG (
	IMG_CODE INT AUTO_INCREMENT PRIMARY KEY
	, ORIGIN_FILE_NAME VARCHAR(100) NOT NULL
	, ATTACHED_FILE_NAME VARCHAR(100) NOT NULL
	, BOARD_CODE INT NOT NULL REFERENCES STUDYROOM_BOARD (BOARD_CODE)
	, BOARD_ANSWER VARCHAR(10) DEFAULT 'NO';
);

CREATE TABLE REVIEW (
	REVIEW_CODE INT AUTO_INCREMENT PRIMARY KEY
	, REVIEW_WRITER VARCHAR(20) NOT NULL REFERENCES STUDYROOM_MEMBER (MEMBER_ID)
	, REVIEW_CONTENT VARCHAR(200) NOT NULL
	, REVIEW_DATE DATETIME DEFAULT CURRENT_TIMESTAMP
);